server {
    listen 80;
    server_name soulheads.com www.soulheads.com;

    # Redirect all HTTP requests to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }

    # Allow certbot authentication challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
}

server {
    listen 443 ssl http2;
    server_name soulheads.com www.soulheads.com;

    # SSL certificate files
    ssl_certificate /etc/nginx/ssl/live/soulheads.com/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/soulheads.com/privkey.pem;
    
    # SSL protocols and ciphers
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_ecdh_curve secp384r1;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;

    # Security headers
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    
    # Log configuration
    access_log /var/log/nginx/soulheads.access.log;
    error_log /var/log/nginx/soulheads.error.log;

    # API requests
    location /api {
        proxy_pass http://api:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Rate limiting
        limit_req zone=api burst=10 nodelay;
        
        # Timeouts
        proxy_read_timeout 60s;
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
    }

    # Frontend static files
    location / {
        proxy_pass http://api:5000;  # Assuming Express serves static files
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        
        # Browser caching for static assets
        location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
            proxy_pass http://api:5000;
            expires 30d;
            add_header Cache-Control "public, no-transform";
        }
    }
    
    # Configure 502 error with custom page
    error_page 502 /502.html;
    location = /502.html {
        root /usr/share/nginx/html;
    }
}

# Rate limiting zone
limit_req_zone $binary_remote_addr zone=api:10m rate=5r/s;